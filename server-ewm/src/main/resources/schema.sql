-- DROP table if exists users cascade;
-- DROP table if exists categories cascade;
-- DROP table if exists locations cascade;
-- DROP table if exists events cascade;
-- DROP table if exists requests cascade;
-- DROP table if exists compilations cascade;
-- DROP table if exists event_compilations cascade;

create table if not exists users
(
    user_id    bigint generated by default as identity primary key,
    user_name  varchar(50),
    user_email varchar(50),
    constraint user_email_unique unique (user_email)
);

create table if not exists categories
(
    category_id   bigint generated by default as identity primary key,
    category_name varchar(50),
    constraint category_name_unique unique (category_name)
);

create table if not exists locations
(
    location_id bigint generated by default as identity primary key,
    lat         float,
    lon         float
);

create table if not exists events
(
    event_id           bigint generated by default as identity primary key,
    annotation         varchar(2000),
    category_id        integer references categories (category_id),
    description        varchar(7000),
    event_date         timestamp without time zone,
    created            timestamp without time zone,
    location_id        bigint references locations (location_id),
    paid               boolean,
    participant_limit  integer,
    request_moderation boolean,
    title              varchar(120),
    state              varchar(10),
    published_on       timestamp without time zone,
    initiator          bigint references users (user_id) on delete cascade,
    confirmed_requests integer,
    views              bigint
);

create table if not exists requests
(
    request_id   bigint generated by default as identity primary key,
    created      timestamp without time zone,
    event_id     bigint references events (event_id) on delete restrict,
    requester_id bigint references users (user_id) on delete restrict,
    status       varchar(10),
    constraint uq_request unique (event_id, requester_id)
);

create table if not exists compilations
(
    compilation_id bigint generated by default as identity primary key,
    pinned         boolean default false,
    title          varchar not null
);

create table if not exists event_compilations
(
    compilation_id bigint references compilations (compilation_id) on delete restrict,
    event_id       bigint references events (event_id) on delete restrict,
    primary key (compilation_id, event_id)
);